{"version":3,"sources":["components/Header.js","components/Category.js","components/Result.js","components/Questions.js","Noresutl.js","components/Main.js","index.js"],"names":["Header","props","className","to","xmlns","viewBox","fill","fillOpacity","d","Category","componentDidMount","console","log","fetch","then","res","json","data","setState","categories","trivia_categories","handleClick","target","dataset","id","type","categoryId","fetchData","difficultyLevel","state","Number","questions","results","componentWillUnmount","this","map","c","String","onClick","e","name","pathname","React","Component","Result","result","count","i","length","correctAnswer","userAnswer","getCorrectAnswers","r","question","Questions","localStorage","currentStep","JSON","parse","clear","nextStep","selectedAnswer","alert","handleLocalStorage","selectOption","event","arr","index","useranswer","correct_answer","setItem","stringify","location","options","incorrect_answers","reduce","acc","curr","includes","push","sort","value","max","o","Noresult","Main","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.50654384.chunk.js","sourcesContent":["import {Link} from \"react-router-dom\";\n\nfunction Header(props) {\n    return (\n        <header className=\"relative\">\n            < Link to=\"/\">\n                <h1 className=\"z-10 absolute left-16 top-12 text-4xl font-bold text-white\">Quiz App</h1>\n            </Link>\n            <div>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 200\"><path fill=\"#0099ff\" fillOpacity=\"1\" d=\"M0,160L40,149.3C80,139,160,117,240,122.7C320,128,400,160,480,170.7C560,181,640,171,720,160C800,149,880,139,960,117.3C1040,96,1120,64,1200,58.7C1280,53,1360,75,1400,85.3L1440,96L1440,0L1400,0C1360,0,1280,0,1200,0C1120,0,1040,0,960,0C880,0,800,0,720,0C640,0,560,0,480,0C400,0,320,0,240,0C160,0,80,0,40,0L0,0Z\"></path></svg>\n            </div>\n        </header>\n    )\n}\n\n\nexport default Header;","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nclass Category extends React.Component {\n    constructor(props){\n        super();\n        this.state = {\n            categories: null,\n            categoryId: null,\n            difficultyLevel: null,\n            questions: null\n        }\n    }\n\n    componentDidMount = () => {\n        console.log(\"component mount\");\n        fetch(\"https://opentdb.com/api_category.php\")\n        .then((res) => res.json())\n        .then((data) => {\n           this.setState({categories: data.trivia_categories});\n        })\n    }\n\n    handleClick = ({target}) => {\n        let {id, type} = target.dataset;\n        if(type === \"category\") {\n            this.setState({categoryId: id}, () => this.fetchData());\n        }else {\n            this.setState({difficultyLevel: id}, () => this.fetchData());\n        }\n    }\n\n    fetchData = () => {\n        let {categoryId, difficultyLevel} = this.state;\n        if(difficultyLevel && categoryId) {\n            categoryId = Number(categoryId);\n\n            fetch(`https://opentdb.com/api.php?amount=10&category=${categoryId}&difficulty=${difficultyLevel}&type=multiple`)\n            .then((res) => res.json())\n            .then((data) => {\n                this.setState({questions: data.results});\n            });\n        }\n    }\n\n    componentWillUnmount = () => {\n        this.setState({questions: null, difficultyLevel: null, categoryId: null});\n    }\n\n    render() {\n       let {categoryId, difficultyLevel, questions} = this.state;\n        return (\n            < main>\n                <h2 className=\"text-center font-bold text-4xl\">Categories</h2>\n                {\n                    !this.state.categories && <h2 className=\"text-center font-bold py-4\">Loading...</h2>\n                }\n                \n                <section>\n                    <div className=\"flex flex-wrap px-12 py-12\">\n                    {\n                        this.state.categories ? this.state.categories.map(c => {\n                        return <span key={c.id} className={categoryId === String(c.id) ? \"bg-red-500 py-2 px-3 my-2 mx-2 cursor-pointer text-white rounded-lg\": \"bg-blue-800 py-2 px-3 my-2 mx-2 cursor-pointer text-white rounded-lg hover:bg-blue-600\"} data-type=\"category\" data-id={c.id} onClick={(e) => this.handleClick(e)}>{c.name}</span>\n                        }): \"\"\n                    }             \n                                \n                    </div>\n                    {\n                        this.state.categories ? (\n                        <>\n                            <h3 className=\"text-center font-bold text-2xl mb-6\">Select Difficulty Level</h3>\n                            <div className=\"flex justify-center\">\n                                <span className={difficultyLevel === \"easy\" ? \"bg-red-500 text-white py-2 px-3 rounded-lg mx-3 cursor-pointer\": \"bg-blue-800 text-white py-2 px-3 rounded-lg mx-3 hover:bg-blue-600 cursor-pointer\"} data-type=\"difficultyLevel\" data-id=\"easy\" onClick={(e) => this.handleClick(e)}>Easy</span>\n\n                                <span className={difficultyLevel === \"medium\" ? \"bg-red-500 text-white py-2 px-3 rounded-lg mx-3 cursor-pointer\": \"bg-blue-800 text-white py-2 px-3 rounded-lg mx-3 hover:bg-blue-600 cursor-pointer\"} data-type=\"difficultyLevel\" data-id=\"medium\" onClick={(e) => this.handleClick(e)}>Medium</span>\n\n                                <span className={difficultyLevel === \"hard\" ? \"bg-red-500 text-white py-2 px-3 rounded-lg mx-3 cursor-pointer\": \"bg-blue-800 text-white py-2 px-3 rounded-lg mx-3 hover:bg-blue-600 cursor-pointer\"} data-type=\"difficultyLevel\" data-id=\"hard\" onClick={(e) => this.handleClick(e)}>Hard</span>\n                            </div>\n                        </>\n                        ) : \"\"\n                    }\n\n                    <div className=\"text-center py-8\">\n                        \n                        <Link to={{\n                            pathname: `/questions/${categoryId}/${difficultyLevel}`,\n                            state: {questions: this.state.questions}\n                        }}>\n                            <button className={categoryId && difficultyLevel && questions? \"visible bg-black text-white py-2 px-3 rounded-lg font-bold\": \"hidden\"}>Start Quiz</button>\n                        </Link>\n                        \n                    </div>\n                </section>\n               \n            </main>\n        )\n    }\n}\n\nexport default Category;","function Result(props) {\n\n    function getCorrectAnswers(results) {\n        let count = 0;\n        for(let i = 0; i < results.length; i++) {\n            if(results[i].correctAnswer === results[i].userAnswer){\n                count++;\n            }\n         }\n         return count;\n    }\n    \n  \n    let results = props.result;\n    console.log(results);\n    return (\n       <section className=\"pb-20\">\n           <h2 className=\"text-center text-4xl font-bold mb-6 text-red-500\">Result of the Quiz</h2>\n            <h2 className=\"text-center font-bold text-2xl mb-6 text-red-500\">Your Score: {getCorrectAnswers(results)}/10</h2>\n            <div>\n                <table className=\"border-collapse border border-gray-900 w-9/12 mx-auto\">\n                    <thead>\n                        <tr className=\"\">\n                            <th className=\"border border-gray-900 py-2 px-3 text-left text-2xl\">Question</th>\n                            <th className=\"border border-gray-900 py-2 px-3 text-left text-2xl\">Correct Answers</th>\n                            <th className=\"border border-gray-900 py-2 px-3 text-left text-2xl\">You Selected</th>\n                            <th className=\"border border-gray-900 py-2 px-3 text-left text-2xl\">Right Or Wrong</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            results.map(r => {\n                                return (\n                                    <tr key={r.question}>\n                                        <td className=\"border border-gray-900 py-3 px-3 text-xl\">{r.question}</td>\n                                        <td className=\"border border-gray-900 py-3 px-3 text-xl\">{r.correctAnswer}</td>\n                                        <td className=\"border border-gray-900 py-3 px-3 text-xl\">{r.userAnswer}</td>\n                                        <td className=\"border border-gray-900 py-3 px-3 text-xl text-center\">\n                                            {\n                                                r.correctAnswer === r.userAnswer ? <i className=\"far fa-check-circle text-green-600\"></i> :\n                                                <i className=\"far fa-times-circle text-red-600\"></i>\n                                            }\n                                        </td>\n                                    </tr>\n                                )\n                            })\n                        }\n                    </tbody>\n                </table>\n            </div>\n       </section>\n    )\n}\n\nexport default Result;","import React from \"react\";\nimport Result from \"./Result\";\n\n\nclass Questions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = {\n            currentStep: 0,\n            selectedAnswer: null,\n            result: []\n        }\n    }\n\n    componentDidMount = () => {\n        console.log(\"component mount\");\n        if(localStorage.results || localStorage.currentStep){\n            if(localStorage.currentStep === 10) {\n                this.setState({currentStep: null, result: []});\n            }else {\n                this.setState({currentStep: JSON.parse(localStorage.currentStep), result: JSON.parse(localStorage.results)});\n            }\n           \n        }\n        \n    }\n\n    componentWillUnmount = () => {\n        console.log(\"componet unmount\");\n        localStorage.clear();\n    }\n\n    nextStep = () => {\n        let {currentStep, selectedAnswer} = this.state;\n        if(!selectedAnswer){\n            return alert(\"Select an option\");\n        }\n        currentStep = currentStep + 1;\n        this.setState({currentStep, selectedAnswer: null}, () => this.handleLocalStorage());\n    }\n\n    selectOption = (event, arr, index) => {\n        console.log(index);\n        let {useranswer} = event.target.dataset;\n        let result = this.state.result;\n        result[index] = {question: arr.question, userAnswer: useranswer, correctAnswer: arr.correct_answer};\n        this.setState({selectedAnswer: useranswer, result}, () => this.handleLocalStorage());\n    }\n\n    handleLocalStorage = () => {\n        let {result, currentStep} = this.state; \n        localStorage.setItem(\"results\", JSON.stringify(result));\n        localStorage.setItem(\"currentStep\", JSON.stringify(currentStep));\n    }\n\n    render() {\n        let {currentStep, selectedAnswer} = this.state;\n       if(currentStep <= 9) {\n           \n            let questions = this.props.location.state.questions;\n            \n            let options = questions.length !== 0 ? questions[currentStep].incorrect_answers.reduce((acc, curr) => {\n            if(!acc.includes(curr)){\n                acc.push(curr);\n            }\n            return acc;\n            }, []): [];\n\n            questions.length !== 0 && options.push(questions[currentStep].correct_answer);\n            options.sort();\n            return (\n                <>\n                {\n                    questions.length !== 0 ? (<section className=\"flex flex-col items-center py-4\">\n                    <div className=\"text-gray-800 w-1/2\">\n                        <h2 className=\"text-xl\">Question {currentStep + 1}/10</h2>\n                            < fieldset className=\"bg-white py-8\">\n                            <meter className=\"w-full h-8\" value={currentStep + 1} max=\"10\"> {currentStep + 1} out of 10</meter>\n                            </fieldset>\n                        <h2 className=\"text-3xl bg-blue-200 py-4 px-4 rounded-lg mb-10\">{questions[currentStep].question}</h2>\n                            {\n                                options.map((o, i) => {\n                                return  <h3 key={o} className={selectedAnswer === o ? \"text-center my-4 bg-blue-400 py-3 rounded-lg text-xl cursor-pointer text-white\": \"text-center my-4 bg-gray-200 py-3 rounded-lg text-xl cursor-pointer\"} data-useranswer={o} onClick={(e) => this.selectOption(e, questions[currentStep], currentStep)}>{o}</h3>\n                                })\n                            }\n                            <button className={currentStep <= 9 ? \"bg-green-400 text-white w-full py-3 rounded-lg block my-6\": \"hidden\"} onClick={() => this.nextStep()}>Next</button>\n                            \n                    </div>\n                </section>) : <h2 className=\"text-center text-3xl font-bold\">No Results for the search</h2>\n                }\n                </>\n            )\n        }else {\n           return  < Result {...this.state}/>\n        }\n    }\n}\n\nexport default Questions;","function Noresult() {\n    return <h2 className=\"text-3xl text-center font-bold\">No results for the search</h2>\n}\n\nexport default Noresult;","import Header from \"./Header\"\nimport Category from \"./Category\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Questions from \"./Questions\";\nimport Result from \"./Result\";\nimport Noresult from \"../Noresutl\";\n\nfunction Main(props) {\n    return (\n       < Router >\n            < Header />\n            < Switch >\n                < Route path=\"/\" exact >\n                    < Category />\n                </Route>\n                < Route path=\"/questions/:id/:id\" component={Questions}> \n                </Route>\n                < Route path=\"/results\" component={Result}>\n                </Route>\n                < Route path=\"*\">\n                    < Noresult />\n                </Route>\n            </Switch>\n       </Router>\n    )\n}\n\nexport default Main;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Main from \"./components/Main\";\nimport \"./style/style.css\";\nReactDOM.render(< Main />, document.getElementById(\"root\"));"],"sourceRoot":""}